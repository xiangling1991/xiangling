寻路算法:
Dijkstra算法：
	就是从起始点访问其他临近节点，并将该节点加入待检查节点集合中，使用松弛算法更新待检查节点的路径长度值。只要图不存在负权值的边，Dijkstra算法能够确保找到最短路径。
贪心最好优先算法：
	该算法对目标点的距离有一个估计值（启发值）。该算法并不在待检查节点集合中选取距离起始点近的节点进行下一步的计算，而是选择距离目标点近的节点。贪心最好优先搜索算法并不能保证寻找到最优路径，然而却能大大提高寻路速度，因为它使用了启发式方法引导了路径的走向。

A*算法：
	该算法集合了Dijkstra算法和贪心最好优先算法。既具有找到最短路径的特点，又具有快速的优点。
	在讨论A*算法时，我们使用：
		g(n)表示从起点到任意节点n的路径花费；
		h(n)表示从节点n到目标节点路径花费的估计值（启发值）。

	A*算法在物体移动的同时平衡这两者的值。定义f(n)=g(n)+h(n)，A*算法将每次检测具有最小
	f(n)值的节点。
